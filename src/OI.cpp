// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/GearDown.h"
#include "Commands/GearGrab.h"
#include "Commands/GearRelease.h"
#include "Commands/GearUp.h"
#include "Commands/LiftCmd.h"
#include "Commands/ShiftOne.h"
#include "Commands/ShiftTwo.h"
#include "Commands/TankDrive.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    stick.reset(new Joystick(0));
    
    gearDown.reset(new JoystickButton(stick.get(), 1));
    gearDown->WhileHeld(new GearDown());
    gearUp.reset(new JoystickButton(stick.get(), 4));
    gearUp->WhileHeld(new GearUp());
    lift.reset(new JoystickButton(stick.get(), 2));
    lift->WhileHeld(new LiftCmd());

    gearGrabButton.reset(new JoystickButton(stick.get(), 5));
    gearGrabToggle.reset(new ToggledPressedButtonScheduler(gearGrabButton.get()->Grab(), gearGrabButton.get(), new GearGrab(), new GearRelease()));
    gearGrabToggle.get()->Start();

    shiftButton.reset(new JoystickButton(stick.get(), 6));
    shiftToggle.reset(new ToggledPressedButtonScheduler(shiftButton.get()->Grab(), shiftButton.get(), new ShiftOne(), new ShiftTwo()));
    shiftToggle.get()->Start();

    // SmartDashboard Buttons
    SmartDashboard::PutData("GearDown", new GearDown());
    SmartDashboard::PutData("GearUp", new GearUp());
    SmartDashboard::PutData("ShiftTwo", new ShiftTwo());
    SmartDashboard::PutData("ShiftOne", new ShiftOne());
    SmartDashboard::PutData("GearRelease", new GearRelease());
    SmartDashboard::PutData("GearGrab", new GearGrab());
    SmartDashboard::PutData("LiftCmd", new LiftCmd());
    SmartDashboard::PutData("TankDrive", new TankDrive());
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getstick() {
   return stick;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
