// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
#include "CANTalon.h"

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "DoubleSolenoid.h"
#include "Compressor.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<CANTalon> RobotMap::driveTrainbackLeft;
std::shared_ptr<CANTalon> RobotMap::driveTrainbackRight;
std::shared_ptr<CANTalon> RobotMap::driveTrainfrontLeft;
std::shared_ptr<CANTalon> RobotMap::driveTrainfrontRight;
std::shared_ptr<DoubleSolenoid> RobotMap::driveTrainleftShift;
std::shared_ptr<DoubleSolenoid> RobotMap::driveTrainrightShift;
std::shared_ptr<CANTalon> RobotMap::liftliftMotor;
std::shared_ptr<Compressor> RobotMap::gearGrabbercompressor;
std::shared_ptr<DoubleSolenoid> RobotMap::gearGrabbergrabSolenoid;
std::shared_ptr<CANTalon> RobotMap::gearGrabbergearVerticalMovement;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
	/*
	 * For CANTalons, change port number if needed, check roborio webpage.
	 * for DoubleSolenoids, they take two ports (last two arguements), put the lower port in first(the channel to push piston forward) and the higher port for second arguement(channel to reverse piston)
	 * the first number is the port of the PCM on the can bus, should be 0 but if it isnt change it for the solenoids.
	 */

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    driveTrainbackLeft.reset(new CANTalon(13));
    lw->AddActuator("DriveTrain", "backLeft", driveTrainbackLeft);
    
    driveTrainbackRight.reset(new CANTalon(15));
    lw->AddActuator("DriveTrain", "backRight", driveTrainbackRight);
    
    driveTrainfrontLeft.reset(new CANTalon(12));
    lw->AddActuator("DriveTrain", "frontLeft", driveTrainfrontLeft);
    
    driveTrainfrontRight.reset(new CANTalon(14));
    lw->AddActuator("DriveTrain", "frontRight", driveTrainfrontRight);
    
    driveTrainleftShift.reset(new DoubleSolenoid(0, 0, 1));
    lw->AddActuator("DriveTrain", "leftShift", driveTrainleftShift);
    
    driveTrainrightShift.reset(new DoubleSolenoid(0, 2, 3));
    lw->AddActuator("DriveTrain", "rightShift", driveTrainrightShift);
    
    liftliftMotor.reset(new CANTalon(7));
    lw->AddActuator("Lift", "liftMotor", liftliftMotor);
    
    gearGrabbercompressor.reset(new Compressor(0));
    
    
    gearGrabbergrabSolenoid.reset(new DoubleSolenoid(0, 4, 5));
    lw->AddActuator("GearGrabber", "grabSolenoid", gearGrabbergrabSolenoid);
    
    gearGrabbergearVerticalMovement.reset(new CANTalon(3));
    lw->AddActuator("GearGrabber", "gearVerticalMovement", gearGrabbergearVerticalMovement);
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
